setwd("~/Dropbox/_Projects/SubDrop/SubDrop Github Repository/Kid Choice Experiments")
#Analysis of the SubjectDrop study!
#setwd(mydir)
#Reading in all libraries that we'll use
library(irr)
library(stringr)
library(languageR)
library(lme4)
library(multcomp)
library(binom)
library(dplyr)
library(lsr)
mean.na.rm <- function(x) { mean(x,na.rm=T) }
sum.na.rm <- function(x) { sum(x,na.rm=T) }
stderr <- function(x) sqrt(var(x)/length(x))
#Get directory of this file
directory = getwd()
#Initialize dataset
subtable = data.frame(NULL)
#Load csv with Alldata into variable
subtable = read.csv(paste0(directory, "/SubDropSpeakers_Data_32115_thesis.csv"), header = TRUE, stringsAsFactors = FALSE)
#Analysis of the SubjectDrop study!
#setwd(mydir)
#Reading in all libraries that we'll use
library(irr)
library(stringr)
library(languageR)
library(lme4)
library(multcomp)
library(binom)
library(dplyr)
library(lsr)
mean.na.rm <- function(x) { mean(x,na.rm=T) }
sum.na.rm <- function(x) { sum(x,na.rm=T) }
stderr <- function(x) sqrt(var(x)/length(x))
#Get directory of this file
directory = getwd()
#Initialize dataset
subtable = data.frame(NULL)
#Load csv with Alldata into variable
subtable = read.csv(paste0(directory, "/SubDropSpeakers_Data_32115_thesis.csv"), header = TRUE, stringsAsFactors = FALSE)
#Fix some NA columns
subtable[is.na(subtable$Strict.include),]$Strict.include <- 0
subtable$Kid.Response.A...Prag.Choice. <- as.character (subtable$Kid.Response.A...Prag.Choice.)
subtable$Kid.Response.B...Prag.Choice. <- as.character (subtable$Kid.Response.B...Prag.Choice.)
subtable[is.na(subtable)] <- 0
#subtable[is.na(subtable$Include.subject),]$Include.subject <- 0
####################################
#Pick subset of data to analyze
#Drop non-included kids!
subtable <- subtable[subtable$Include.subject. == "1",]
#Drop early version of kidsecret (confusing instructions)
subtable <- subtable[subtable$Experiment != "KidSecret",]
##Look at n kids in sub-experiments (good for checking updates on n subjects needed per condition)
##How many kids of each Age, Experiment, Condition?
#with(subtable, tapply(as.numeric(as.character(Include.subject.)), list(Experiment, Condition, Age.Years), sum.na.rm), drop=TRUE)
#
##Get info for individual sub-experiments (good for updating 'subjects needed' on ongoing exps)
#subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
#subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
#PSecret <- subtable[subtable$Experiment == "ParentSecret",]
#KSecret <- subtable[subtable$Experiment == "KidSecret-New",]
#
#Parent56 <- PSecret[PSecret$Age.Years >4,]
#Parent34 <- PSecret[PSecret$Age.Years < 5,]
#Kid56 <- KSecret[KSecret$Age.Years>4,]
#with(Parent34, tapply(as.numeric(as.character(Include.subject.)), list(Condition, Age.Years, Gender), sum.na.rm), drop=TRUE)
#with(Kid56, tapply(as.numeric(as.character(Include.subject.)), list(Condition, Age.Years, Gender), sum.na.rm), drop=TRUE)
#Choose ParentSecret on older children
subtable <- subtable[subtable$Experiment == "ParentSecret",]
#subtable <- subtable[subtable$Age.Years > 4,]
#Choose ParentSecret on older children
subtable <- subtable[subtable$Experiment == "ParentSecret",]
subtable <- subtable[subtable$Age.Years > 4,]
subtable <- subtable[subtable$Strict.include == 1,]
#Choose ParentSecret on older children
subtable <- subtable[subtable$Experiment == "ParentSecret",]
subtable <- subtable[subtable$Age.Years > 4,]
#Get info for individual sub-experiments (good for updating 'subjects needed' on ongoing exps)
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
PSecret <- subtable[subtable$Experiment == "ParentSecret",]
KSecret <- subtable[subtable$Experiment == "KidSecret-New",]
#
Parent56 <- PSecret[PSecret$Age.Years >4,]
with(Parent56, tapply(as.numeric(as.character(Include.subject.)), list(Condition, Age.Years, Gender), sum.na.rm), drop=TRUE)
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
with(Parent56, tapply(as.numeric(as.character(Include.subject.)), list(Condition, Age.Years, Gender), sum.na.rm), drop=TRUE)
with(Parent56, tapply(as.numeric(as.character(Include.subject.)), list(Condition, Age.Years), sum.na.rm), drop=TRUE)
nrow(subtable)
#Analysis of the SubjectDrop study!
#setwd(mydir)
#Reading in all libraries that we'll use
library(irr)
library(stringr)
library(languageR)
library(lme4)
library(multcomp)
library(binom)
library(dplyr)
library(lsr)
mean.na.rm <- function(x) { mean(x,na.rm=T) }
sum.na.rm <- function(x) { sum(x,na.rm=T) }
stderr <- function(x) sqrt(var(x)/length(x))
#Get directory of this file
directory = getwd()
#Initialize dataset
subtable = data.frame(NULL)
#Load csv with Alldata into variable
subtable = read.csv(paste0(directory, "/SubDropSpeakers_Data_32115_thesis.csv"), header = TRUE, stringsAsFactors = FALSE)
#Fix some NA columns
subtable[is.na(subtable$Strict.include),]$Strict.include <- 0
subtable$Kid.Response.A...Prag.Choice. <- as.character (subtable$Kid.Response.A...Prag.Choice.)
subtable$Kid.Response.B...Prag.Choice. <- as.character (subtable$Kid.Response.B...Prag.Choice.)
subtable[is.na(subtable)] <- 0
#subtable[is.na(subtable$Include.subject),]$Include.subject <- 0
nrow(subtable)
subtable <- subtable[subtable$Strict.include == 1,]
nrow(subtable)
subtable <- subtable[subtable$Experiment == "ParentSecret",]
nrow(subtable)
subtable <- subtable[subtable$Age.Years > 4,]
nrow(subtable)
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
with(subtable, tapply(as.numeric(as.character(Include.subject.)), list(Condition, Age.Years), sum.na.rm), drop=TRUE)
with(subtable, tapply(as.numeric(as.character(Strict.include)), list(Condition, Age.Years), sum.na.rm), drop=TRUE)
2+3+2+1+1+4+2+2+2+4
2+3+2+1+1+4
2+2+2+4
subtable$oldCond <- subtable$Condition
subtable[subtable$Condition == "SDOD",]$Condition <- "SD"
subtable[subtable$Condition == "SDSD",]$Condition <- "SD"
subtable[subtable$Condition == "ODSD",]$Condition <- "OD"
subtable[subtable$Condition == "ODOD",]$Condition <- "OD"
subtable$oldCond <- subtable$Condition
subtable[subtable$Condition == "SDOD",]$Condition <- "SD"
subtable[subtable$Condition == "SDSD",]$Condition <- "SD"
subtable[subtable$Condition == "ODSD",]$Condition <- "OD"
subtable[subtable$Condition == "ODOD",]$Condition <- "OD"
subtable$isPragChoiceA <- "NA"
subtable[subtable$Condition == "SD" & subtable$Kid.Response.A...Prag.Choice. == "monkey eat",]$isPragChoiceA <- 0
subtable[subtable$Condition == "SD" & subtable$Kid.Response.A...Prag.Choice. == "eat orange",]$isPragChoiceA <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.A...Prag.Choice. == "monkey eat",]$isPragChoiceA <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.A...Prag.Choice. == "eat orange",]$isPragChoiceA <- 0
subtable$isPragChoiceB <- "NA"
subtable[subtable$Condition == "SD" & subtable$Kid.Response.B...Prag.Choice. == "girl pet",]$isPragChoiceB <- 0
subtable[subtable$Condition == "SD" & subtable$Kid.Response.B...Prag.Choice. == "pet dog",]$isPragChoiceB <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.B...Prag.Choice. == "girl pet",]$isPragChoiceB <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.B...Prag.Choice. == "pet dog",]$isPragChoiceB <- 0
subtable$isPragChoiceA <- as.numeric(as.character(subtable$isPragChoiceA))
subtable$isPragChoiceB <- as.numeric(as.character(subtable$isPragChoiceB))
#Express this as # chose 'correct'
subtable$pragChoiceScore <- subtable$isPragChoiceA + subtable$isPragChoiceB
#...Or as # chose to drop the object
subtable$choseObjectDrop <- subtable$pragChoiceScore
subtable[subtable$Condition == "SD",]$choseObjectDrop <- 2-subtable[subtable$Condition == "SD",]$pragChoiceScore
table(subtable$Condition, subtable$choseObjectDrop)
table(subtable$Condition, subtable$pragChoiceScore)
subtable$Condition <- as.factor(subtable$Condition)
subtable$Subject <- as.factor(subtable$Subject..)
subtable$choseObjectDrop <- as.factor(subtable$choseObjectDrop)
subtable$pragChoice_1 <- subtable$isPragChoiceA
subtable$pragChoice_2 <- subtable$isPragChoiceB
sub.long = wideToLong(subtable,within="trial", sep='_')
sub.long$choseObjectDrop <- sub.long$pragChoice
sub.long[sub.long$Condition == "SD",]$choseObjectDrop <- 1-sub.long[sub.long$Condition == "SD",]$pragChoice
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
summary(full_maximal_model)
#Alternate way to evaluate the model: compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
anova(full_maximal_model, no_fixed)
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial), data=sub.long, family="binomial")
#Alternate way to evaluate the model: compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (Condition|trial), data=sub.long, family="binomial")
anova(full_maximal_model, no_fixed)
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (1|trial) + (1|Subject), data=sub.long, family="binomial")
no_fixed <- lmer(choseObjectDrop ~ 1 + (1|trial) + (1|Subject), data=sub.long, family="binomial")
anova(full_maximal_model, no_fixed)
table(subtable$Condition, subtable$choseObjectDrop)
setwd("~/Dropbox/_Projects/SubDrop/SubDrop Github Repository/Kid Choice Experiments")
#Analysis of the SubjectDrop study!
#setwd(mydir)
#Reading in all libraries that we'll use
library(irr)
library(stringr)
library(languageR)
library(lme4)
library(multcomp)
library(binom)
library(dplyr)
library(lsr)
mean.na.rm <- function(x) { mean(x,na.rm=T) }
sum.na.rm <- function(x) { sum(x,na.rm=T) }
stderr <- function(x) sqrt(var(x)/length(x))
#Get directory of this file
directory = getwd()
#Initialize dataset
subtable = data.frame(NULL)
#Load csv with Alldata into variable
subtable = read.csv(paste0(directory, "/SubDropSpeakers_Data_42815_thesis.csv"), header = TRUE, stringsAsFactors = FALSE)
#Fix some NA columns
subtable[is.na(subtable$Strict.include),]$Strict.include <- 0
subtable$Kid.Response.A...Prag.Choice. <- as.character (subtable$Kid.Response.A...Prag.Choice.)
subtable$Kid.Response.B...Prag.Choice. <- as.character (subtable$Kid.Response.B...Prag.Choice.)
subtable[is.na(subtable)] <- 0
#subtable[is.na(subtable$Include.subject),]$Include.subject <- 0
####################################
#Pick subset of data to analyze
#Drop non-included kids!
subtable <- subtable[subtable$Include.subject. == "1",]
#New - choose stricter inclusion criteria.., following new paradigm rules
subtable <- subtable[subtable$Strict.include == 1,]
#Choose ParentSecret on older children
subtable <- subtable[subtable$Experiment == "ParentSecret",]
#Look at n kids in sub-experiments (this is good for checking updates on n subjects needed per condition)
#How many kids of each Age, Experiment, Condition?
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
with(subtable, tapply(as.numeric(as.character(Strict.include)), list(Condition, Age.Years), sum.na.rm), drop=TRUE)
nrow(subtable)
#Analysis of the SubjectDrop study!
#setwd(mydir)
#Reading in all libraries that we'll use
library(irr)
library(stringr)
library(languageR)
library(lme4)
library(multcomp)
library(binom)
library(dplyr)
library(lsr)
mean.na.rm <- function(x) { mean(x,na.rm=T) }
sum.na.rm <- function(x) { sum(x,na.rm=T) }
stderr <- function(x) sqrt(var(x)/length(x))
#Get directory of this file
directory = getwd()
#Initialize dataset
subtable = data.frame(NULL)
#Load csv with Alldata into variable
subtable = read.csv(paste0(directory, "/SubDropSpeakers_Data_42815_thesis.csv"), header = TRUE, stringsAsFactors = FALSE)
#Fix some NA columns
subtable[is.na(subtable$Strict.include),]$Strict.include <- 0
subtable$Kid.Response.A...Prag.Choice. <- as.character (subtable$Kid.Response.A...Prag.Choice.)
subtable$Kid.Response.B...Prag.Choice. <- as.character (subtable$Kid.Response.B...Prag.Choice.)
subtable[is.na(subtable)] <- 0
#subtable[is.na(subtable$Include.subject),]$Include.subject <- 0
####################################
#Pick subset of data to analyze
#Drop non-included kids!
#subtable <- subtable[subtable$Include.subject. == "1",]
#New - choose stricter inclusion criteria.., following new paradigm rules
subtable <- subtable[subtable$Strict.include == 1,]
#Choose ParentSecret on older children
subtable <- subtable[subtable$Experiment == "ParentSecret",]
nrow(subtable)
#Look at n kids in sub-experiments (this is good for checking updates on n subjects needed per condition)
#How many kids of each Age, Experiment, Condition?
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
with(subtable, tapply(as.numeric(as.character(Strict.include)), list(Condition, Age.Years), sum.na.rm), drop=TRUE)
2+2+3+2+2+4
3+1+6+2+4
3+1+1+3+9
4+2+1+11+10+1
subtable$oldCond <- subtable$Condition
subtable[subtable$Condition == "SDOD",]$Condition <- "SD"
subtable[subtable$Condition == "SDSD",]$Condition <- "SD"
subtable[subtable$Condition == "ODSD",]$Condition <- "OD"
subtable[subtable$Condition == "ODOD",]$Condition <- "OD"
subtable$isPragChoiceA <- "NA"
subtable[subtable$Condition == "SD" & subtable$Kid.Response.A...Prag.Choice. == "monkey eat",]$isPragChoiceA <- 0
subtable[subtable$Condition == "SD" & subtable$Kid.Response.A...Prag.Choice. == "eat orange",]$isPragChoiceA <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.A...Prag.Choice. == "monkey eat",]$isPragChoiceA <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.A...Prag.Choice. == "eat orange",]$isPragChoiceA <- 0
subtable$isPragChoiceB <- "NA"
subtable[subtable$Condition == "SD" & subtable$Kid.Response.B...Prag.Choice. == "girl pet",]$isPragChoiceB <- 0
subtable[subtable$Condition == "SD" & subtable$Kid.Response.B...Prag.Choice. == "pet dog",]$isPragChoiceB <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.B...Prag.Choice. == "girl pet",]$isPragChoiceB <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.B...Prag.Choice. == "pet dog",]$isPragChoiceB <- 0
subtable$isPragChoiceA <- as.numeric(as.character(subtable$isPragChoiceA))
subtable$isPragChoiceB <- as.numeric(as.character(subtable$isPragChoiceB))
#Express this as # chose 'correct'
subtable$pragChoiceScore <- subtable$isPragChoiceA + subtable$isPragChoiceB
#...Or as # chose to drop the object
subtable$choseObjectDrop <- subtable$pragChoiceScore
subtable[subtable$Condition == "SD",]$choseObjectDrop <- 2-subtable[subtable$Condition == "SD",]$pragChoiceScore
table(subtable$Condition, subtable$choseObjectDrop)
table(subtable$Condition, subtable$pragChoiceScore)
subtable34 <- subtable[subtable$Age.Years < 5,]
subtable56 <- subtable[subtable$Age.Years > 4,]
table(subtable34$Condition, subtable$pragChoiceScore)
table(subtable56$Condition, subtable$pragChoiceScore)
table(subtable34$Condition, subtable34$pragChoiceScore)
table(subtable56$Condition, subtable56$pragChoiceScore)
table(subtable34$Condition, subtable34$choseObjectDrop)
table(subtable56$Condition, subtable56$choseObjectDrop)
subtable$Condition <- as.factor(subtable$Condition)
subtable$Subject <- as.factor(subtable$Subject..)
subtable$choseObjectDrop <- as.factor(subtable$choseObjectDrop)
subtable$pragChoice_1 <- subtable$isPragChoiceA
subtable$pragChoice_2 <- subtable$isPragChoiceB
sub.long = wideToLong(subtable,within="trial", sep='_')
sub.long$choseObjectDrop <- sub.long$pragChoice
sub.long[sub.long$Condition == "SD",]$choseObjectDrop <- 1-sub.long[sub.long$Condition == "SD",]$pragChoice
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (1|trial) + (1|Subject), data=sub.long, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (1|trial) + (1|Subject), data=sub.long, family="binomial")
anova(full_maximal_model, no_fixed)
table(subtable$Condition, subtable$choseObjectDrop)
sub.long$Age.Years
sub.long34 <- sub.long[sub.long$Age.Years<5]
sub.long56 <- sub.long[sub.long$Age.Years>4,]
sub.long34 <- sub.long[sub.long$Age.Years<5,]
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long56, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long56, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (1|trial) + (1|Subject), data=sub.long56, family="binomial")
anova(full_maximal_model, no_fixed)
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long34, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (1|trial) + (1|Subject), data=sub.long34, family="binomial")
anova(full_maximal_model, no_fixed)
names(sub.long)
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition*Days.Old|trial) + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
# Logistic Regression model.  No (Condition|Subject) random effect because condition was varied between subjects
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
anova(full_maximal_model, no_fixed)
# Logistic Regression model.  No (Condition|Subject) random effect because condition was varied between subjects
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long56, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (Condition|trial) + (1|Subject), data=sub.long56, family="binomial")
anova(full_maximal_model, no_fixed)
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long34, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (Condition|trial) + (1|Subject), data=sub.long34, family="binomial")
anova(full_maximal_model, no_fixed)
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
anova(full_maximal_model, no_fixed)
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
sub.long$Days.Old
#Analysis of the SubjectDrop study!
#setwd(mydir)
#Reading in all libraries that we'll use
library(irr)
library(stringr)
library(languageR)
library(lme4)
library(multcomp)
library(binom)
library(dplyr)
library(lsr)
mean.na.rm <- function(x) { mean(x,na.rm=T) }
sum.na.rm <- function(x) { sum(x,na.rm=T) }
stderr <- function(x) sqrt(var(x)/length(x))
#Get directory of this file
directory = getwd()
#Initialize dataset
subtable = data.frame(NULL)
#Load csv with Alldata into variable
subtable = read.csv(paste0(directory, "/SubDropSpeakers_Data_42815_thesis.csv"), header = TRUE, stringsAsFactors = FALSE)
#Fix some NA columns
subtable[is.na(subtable$Strict.include),]$Strict.include <- 0
subtable$Kid.Response.A...Prag.Choice. <- as.character (subtable$Kid.Response.A...Prag.Choice.)
subtable$Kid.Response.B...Prag.Choice. <- as.character (subtable$Kid.Response.B...Prag.Choice.)
subtable[is.na(subtable)] <- 0
#subtable[is.na(subtable$Include.subject),]$Include.subject <- 0
#Fix age calculations!
subtable$Days.Old
subtable$Age.Years
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
#Fix age calculations!
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Days.Old <- as.numeric(as.character(subtable$Days.Old))
####################################
#Pick subset of data to analyze
#Drop non-included kids!
#subtable <- subtable[subtable$Include.subject. == "1",]
#New - choose stricter inclusion criteria.., following new paradigm rules
subtable <- subtable[subtable$Strict.include == 1,]
#Choose ParentSecret on older children
subtable <- subtable[subtable$Experiment == "ParentSecret",]
#Look at n kids in sub-experiments (this is good for checking updates on n subjects needed per condition)
#How many kids of each Age, Experiment, Condition?
subtable$Age.Years <- as.numeric(as.character(subtable$Age.Years))
subtable$Gender <- subtable$Gender..Guessed.from.Name.Appearance.
with(subtable, tapply(as.numeric(as.character(Strict.include)), list(Condition, Age.Years), sum.na.rm), drop=TRUE)
#############################################
# Recode variables
#SD: 'subject drop' is the 'correct answer', other name for this condition is 'two fruits'
#OD: aka 'two animals'
#Note- we tried 2-trial and 4-trial versions of the task.  With within-subj 4-trial version, we saw big carryover effects. So, analyze just 1st 2 trials
#from all versions togther.
subtable$oldCond <- subtable$Condition
subtable[subtable$Condition == "SDOD",]$Condition <- "SD"
subtable[subtable$Condition == "SDSD",]$Condition <- "SD"
subtable[subtable$Condition == "ODSD",]$Condition <- "OD"
subtable[subtable$Condition == "ODOD",]$Condition <- "OD"
subtable$isPragChoiceA <- "NA"
subtable[subtable$Condition == "SD" & subtable$Kid.Response.A...Prag.Choice. == "monkey eat",]$isPragChoiceA <- 0
subtable[subtable$Condition == "SD" & subtable$Kid.Response.A...Prag.Choice. == "eat orange",]$isPragChoiceA <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.A...Prag.Choice. == "monkey eat",]$isPragChoiceA <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.A...Prag.Choice. == "eat orange",]$isPragChoiceA <- 0
subtable$isPragChoiceB <- "NA"
subtable[subtable$Condition == "SD" & subtable$Kid.Response.B...Prag.Choice. == "girl pet",]$isPragChoiceB <- 0
subtable[subtable$Condition == "SD" & subtable$Kid.Response.B...Prag.Choice. == "pet dog",]$isPragChoiceB <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.B...Prag.Choice. == "girl pet",]$isPragChoiceB <- 1
subtable[subtable$Condition == "OD" & subtable$Kid.Response.B...Prag.Choice. == "pet dog",]$isPragChoiceB <- 0
subtable$isPragChoiceA <- as.numeric(as.character(subtable$isPragChoiceA))
subtable$isPragChoiceB <- as.numeric(as.character(subtable$isPragChoiceB))
#Express this as # chose 'correct'
subtable$pragChoiceScore <- subtable$isPragChoiceA + subtable$isPragChoiceB
#...Or as # chose to drop the object
subtable$choseObjectDrop <- subtable$pragChoiceScore
subtable[subtable$Condition == "SD",]$choseObjectDrop <- 2-subtable[subtable$Condition == "SD",]$pragChoiceScore
####################################
#Descriptive stats for graph (Developmental, small sample, so we'll present hist. of kids choosing each asnwer, rather than proportion scores)
table(subtable$Condition, subtable$choseObjectDrop)
table(subtable$Condition, subtable$pragChoiceScore)
#and split by age
subtable34 <- subtable[subtable$Age.Years < 5,]
subtable56 <- subtable[subtable$Age.Years > 4,]
table(subtable34$Condition, subtable34$choseObjectDrop)
table(subtable56$Condition, subtable56$choseObjectDrop)
####################################
# Analysis
#First make sure factors are coded correctly, and melt the dataset
subtable$Condition <- as.factor(subtable$Condition)
subtable$Subject <- as.factor(subtable$Subject..)
subtable$choseObjectDrop <- as.factor(subtable$choseObjectDrop)
subtable$pragChoice_1 <- subtable$isPragChoiceA
subtable$pragChoice_2 <- subtable$isPragChoiceB
sub.long = wideToLong(subtable,within="trial", sep='_')
sub.long$choseObjectDrop <- sub.long$pragChoice
sub.long[sub.long$Condition == "SD",]$choseObjectDrop <- 1-sub.long[sub.long$Condition == "SD",]$pragChoice
sub.long56 <- sub.long[sub.long$Age.Years>4,]
sub.long34 <- sub.long[sub.long$Age.Years<5,]
#3 and 4
full_maximal_model <- lmer(choseObjectDrop ~ Condition + (Condition|trial) + (1|Subject), data=sub.long34, family="binomial")
#compare to model w/o fixed effect
no_fixed <- lmer(choseObjectDrop ~ 1 + (Condition|trial) + (1|Subject), data=sub.long34, family="binomial")
anova(full_maximal_model, no_fixed)
# Logistic Regression model.  No (Condition|Subject) random effect because condition was varied between subjects
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (1|trial) + (1|Subject), data=sub.long, family="binomial")
sub.long$Days.Old
full_maximal_model <- lmer(choseObjectDrop ~ Days.Old + (1|trial) + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Days.Old + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Days.Old + (1|Condition), data=sub.long, family="binomial")
sub.long$Days.Old
mean(sub.long$Days.Old)
attach(sub.long)
plot(Days.Old, choseObjectDrop)
plot(Age.Years, choseObjectDrop)
plot(Age.Years, choseObjectDrop)
plot(Days.Old, choseObjectDrop)
detach(sub.long)
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Days.Old + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
full_maximal_model <- lmer(choseObjectDrop ~ Condition*Age.Years + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
no_age <- lmer(choseObjectDrop ~ Condition+Age.Years + (Condition|trial) + (1|Subject), data=sub.long, family="binomial")
anova(full_maximal_model, no_age)
table(subtable$Condition, subtable$choseObjectDrop)
table(subtable$Condition, subtable$pragChoiceScore)
#and split by age
subtable34 <- subtable[subtable$Age.Years < 5,]
subtable56 <- subtable[subtable$Age.Years > 4,]
table(subtable34$Condition, subtable34$choseObjectDrop)
table(subtable56$Condition, subtable56$choseObjectDrop)
5+4+8+8+5
5+8+6+7+7+6
