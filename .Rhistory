threeYOdata
threeYOdata <-mydata[mydata$Age.Years ==3,]
mydata
mydata <-read.csv(file.choose(), header=TRUE)
mydata
threeYOdata <-mydata[mydata$Age.Years ==3,]
threeYOdata
summary(threeYOdata)
mydata
(ParticipantScores, tapply(ChoseLateral, list(Object.Type, GestureCondition), mean, na.rm=TRUE), drop=TRUE)
(ParticipantScores, tapply(ChoseLateral, list(Object.Type, Condition), mean, na.rm=TRUE), drop=TRUE)
library ("swirl")
swirl()
bye()
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
lappy(flags)
lapply(flags)
cls_list <-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <-sapply(flags, class)
class(cls_vector)
class(cls_vect)
sum(flags$orange)
flag_colors <-flags[, 11:17]
head(flag_colors)
lapply(flags_colors)sum
lapply(flags_colors, sum)
lapply(flags_colors, sum)
help()
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flags_colors, mean)
sapply(flag_colors, mean)
flags_shapes <-flags[, 19:23]
flag_shapes <-flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <-sapply(flag_shapes, range)
shape_mat
class9shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <-lapply(flags, unique)
unique_vals
length(unique_vals)
sapply)unique_vals, length
sapply(unique_vals, length)
sapply(flags, unique)
lapply)unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply)flags, class, character(1)
vapply)flags, class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmarks, summary)
tapply(flags$population, flags$landmass, summary)
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(3,5,7)
x(c(3,5,7))
x[c(3,5,7)]
x(i.e. x[0])
library("swirl")
swirl()
TRUE=TRUE
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!5=7
5!=7
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE, FALSE)
MeanSDOD <- mydata[mydata$Condition == "SDOD",]$Correct
TRUE
MeanSDOD
x <- mydata[mydata$Condition == "SDOD",]$Correct
x
mean(x)
y <- mydata[mydata$Condition =="ODSD",]$Correct
y
mean(y)
bye()
threeYOdata
threeYO_cc <-threeYOdata[, 4:5]
threeYO_cc
a <-threeYO_cc[threeYO_cc$Condition =="SDOD",]$Correct
a
mean(a)
b <-threeYO_cc[threeYO_cc$Condition =="SDOD",]$Correct
b
mean(b)
b <-threeYO_cc[threeYO_cc$Condition =="ODSD",]$Correct
b
threeYO_cc
b <-threeYO_cc[threeYO_cc$Condition =="ODSD",]$Correct
b
a
mean(b)
fourYOdata
fourYOdata <-mydata[mydata$Age.Years ==4,]
fourYOdata
fourYOdata
fourYO_cc <-fourYOdata[, 4:5]
fourYO_cc
fourYO_cc <-fourYOdata[, 4:5]
fourYO_cc
c <-fourYO_cc[fourYO_cc$Condition =="SDOD",]$Correct
c
mean(c)
d <-fourYO_cc[fourYO_cc$Condition =="ODSD",]$Correct
d
mean(d)
a
summary(a)
summary(c)
summary(b)
summary(d)
threeYO_cc
(tab <- prop.table(table(df), 1)*100)
?percen
?prop.table
threeYO_cc
> tab <- with(threeYO_cc, table(threeYO_cc$Correct, threeYO_cc$Condition))
> prop.table(tab, margin = 1)
> tab <- with(threeYO_cc, table(threeYO_cc$Correct, threeYO_cc$Condition))
tab <- with(threeYO_cc, table(threeYO_cc$Correct, threeYO_cc$Condition))
tab
prop.table(tab, margin = 1)
prop.table(tab, 1)*100
class(tab)
tab(cls_list)
threeYO_cc
threeYO_cc <- transform(threeYO_cc, cumFreq = cumsum(Freq), relative = prop.table(Freq))
threeYOper <- transform(threeYO_cc, cumFreq = cumsum(Freq), relative = prop.table(Freq))
threeYOper <- transform(threeYO_cc, cumFreq, relative = prop.table(Freq))
PerAB <- threeYO_cc(cut(x, breaks=nclass.Sturges(x)))
PerAB <- a(cut(x, breaks=nclass.Sturges(x)))
PerAB <- threeYO_cc(cut(mydata, breaks=nclass.Sturges(x)))
PerAB <- threeYO_cc(cut(threeYOdata, breaks=nclass.Sturges(x)))
PerAB <- as.data.frame(table(threeYO_cc))
PerAB
PerAB <- transform(PerAB, cumFreq = cumsum(Freq), relative = prop.table(Freq))
PerAB
Freq <- with(PerAB, table(PerAB$Correct, PerAB$Condition))
Freq
PerAB <- with(threeYO_cc, table(threeYO_cc$Correct, threeYO_cc$Condition))
PerAB
prop.table(tab, margin = 1)
prop.table(tab, 1)*100
PerABB <- with(threeYO_cc, table(FreqAB$Correct, FreAB$Condition))
PerABB <- with(threeYO_cc, table(FreqAB$Correct, FreqAB$Condition))
PerABB <- with(threeYO_cc, table(Freq$Correct, Freq$Condition))
PerABB <- with(PerAB, table(PerAB$Correct, PerAB$Condition))
PerABB <- with(threeYO_cc, table(PerAB$Correct, PerAB$Condition))
freq
mydata
threeYOdata <- mydata[mydata$Age == 3,]
threeYOdata
mydata
install.packages(plotrix)
threeYO_cc
mean(threeYO_cc)
threeYOdata
std <-function(threeYOdata)sd(threeYOdata)/sqrt(length(threeYOdata))
std
BlindData <-read.csv(file.choose(), header=TRUE)
BlindData
BlindData <-read.csv(file.choose(), header=TRUE)
BlindData
SubDrop <-read.csv(file.choose(), header=TRUE)
SubDrop <-read.csv(file.choose(), header=TRUE)
total <- merge(data frameA,data frameB,by="ID")
SubDrop <-read.csv(file.choose(), header=TRUE)
SubDrop
total <- merge(SubDrop,BlindData,by="Subject", "Video Name", "Test Date", "Gender","Kid Response A - Prag Choice?", "Kid Response B - Prag Choice?", "Kid Response C - Prag Choice?", "Kid Response D - Prag Choice?")
total <- merge(SubDrop,BlindData, by="Subject", "Video Name", "Test Date", "Gender","Kid Response A - Prag Choice?", "Kid Response B - Prag Choice?", "Kid Response C - Prag Choice?", "Kid Response D - Prag Choice?")
total <- merge(data SubDrop,data BlindData, by="Subject", "Video Name", "Test Date", "Gender","Kid Response A - Prag Choice?", "Kid Response B - Prag Choice?", "Kid Response C - Prag Choice?", "Kid Response D - Prag Choice?")
total <- merge(data "SubDrop",data "BlindData", by="Subject", "Video Name", "Test Date", "Gender","Kid Response A - Prag Choice?", "Kid Response B - Prag Choice?", "Kid Response C - Prag Choice?", "Kid Response D - Prag Choice?")
total <- merge(data SubDrop,data BlindData, by=c("Subject", "Video Name", "Test Date", "Gender","Kid Response A - Prag Choice?", "Kid Response B - Prag Choice?", "Kid Response C - Prag Choice?", "Kid Response D - Prag Choice?"))
total <- merge(SubDrop,BlindData, by=c("Subject", "Video Name", "Test Date", "Gender","Kid Response A - Prag Choice?", "Kid Response B - Prag Choice?", "Kid Response C - Prag Choice?", "Kid Response D - Prag Choice?"))
total <- merge(SubDrop,BlindData, by=c("Subject", "Video.Name", "Test.Date", "Gender","Kid.Response.A...Prag.Choice?", "Kid.Response.B...Prag.Choice?", "Kid.Response.C...Prag.Choice?", "Kid.Response.D...Prag.Choice?"))
TotalData <- merge(SubDrop, BlindData, by=c("Kid.Response.A...Prag.Choice?", "Kid.Response.B...Prag.Choice?", "Kid.Response.C...Prag.Choice?", "Kid.Response.D...Prag.Choice?"))
TotalData <- merge(SubDrop, BlindData, by=c("Subject"))
TotalData <- merge(SubDrop, BlindData, by=c("Participant"))
SubDrop
BlindData
Totaldata <- merge(BlindData, SubDrop, by=c("Participant.."))
Totaldata <- merge(BlindData, SubDrop, by=c("Subject.."))
Totaldata
TotalData <- merge(BlindData, SubDrop, by=c("Subject.."))
TotalData
TotalData$Kid.Response.A...Prag.Choice..x
Totaldata$Compare = (as.character(SubDrop$Kid.Response.A...Prag.Choice.) == as.character(BlindData$Kid.Response.A...Prag.Choice.))
TotalData
TotalData <- merge(BlindData, SubDrop, by=c("Subject.."))
TotalData
total <- rbind(SubDrop, BlindData)
total
merged.data.all <- merge(SubDrop, BlindData, by="Kid.Response.A...Prag.Choice.", all.x=TRUE)
merged.data.all
> merged.data.all <- merge(SubDrop, BlindData, by="Subjects..", all.x=TRUE)
merged.data.all <- merge(SubDrop, BlindData, by="Subjects..", all.x=TRUE)
merged.data.all <- merge(SubDrop, BlindData, by="Subjects..", all.x=TRUE)
SubDrop
merged.data.all <- merge(SubDrop, BlindData, by="Subject..", all.x=TRUE)
merged.data.all
TotalData
summary(TotalData)
TotalData <- merge(SubDrop, BlindData, by=c("Subject.."))
TotalData
SubDrop$match <- match(SubDrop$Kid.Response.A...Prag.Choice., BlindData$Kid.Response.A...Prag.Choice., nomatch=0)
SubDrop
SubDrop$match <- match(SubDrop$Subject.., BlindData$Subject.., nomatch=0)
SubDrop$match
SubDrop$match <- match(SubDrop$Kid.Response.A...Prag.Choice., BlindData$Kid.Response.A...Prag.Choice., nomatch=0)
SubDrop$match
TotalData$Compare = (as.character(TotalData$Kid.Response.A...Prag.Choice..x) == as.character(TotalData$Kid.Response.A...Prag.Choice..y))
TotalData$Compare
TotalData$match = (as.character(TotalData$Kid.Response.A...Prag.Choice..x) == as.character(TotalData$Kid.Response.A...Prag.Choice..y))
TotalData$match
TotalData$match = (as.character(TotalData$Kid.Response.A...Prag.Choice..x) == as.character(TotalData$Kid.Response.A...Prag.Choice..y nomatch=0))
TotalData$match = (as.character(TotalData$Kid.Response.A...Prag.Choice..x) == as.character(TotalData$Kid.Response.A...Prag.Choice..y, nomatch=0))
TotalData$match
TotalData
TotalData$match
sum(TRUE)
count(TRUE)
nomatchdata <- TotalData[TotalData$Compare == FALSE,]
nomatchdata
nomatchdata <- TotalData[TotalData$match == FALSE,]
nomatchdata
nomatchdata <- nomatchdata[,c("Subject..", "Video.Name", "Test.Date", "Gender", "Kid.Response.A...Prag.Choice..", "Kid.Response.B...Prag.Choice..", "Kid.Response.C...Prag.Choice..", "Kid.Response.D...Prag.Choice..")]
TotalData
summary(TotalData)
?merge
TotalData
class(TotalData)
TotalData$match = (as.character(TotalData$Kid.Response.A...Prag.Choice..x) == as.character(TotalData$Kid.Response.A...Prag.Choice..y))
TotalData$match
nomatchdata <- TotalData[TotalData$match == FALSE,]
nomatchdata
mydata
myData <- myData[-c(2, 4, 6), ]
myData <- myData[-c(2, 4, 6), ]
mydata
summary(mydata)
SubDrop <-read.csv(file.choose(), header=TRUE)
SubDrop
BlindData <-read.csv(file.choose(), header=TRUE)
BlindData
TotalData <- merge(SubDrop, BlindData, by=c("Subject.."))
TotalData
TotalData$match = (as.character(TotalData$Kid.Response.A...Prag.Choice..x) == as.character(TotalData$Kid.Response.A...Prag.Choice..y))
TotalData$match
mydata <-read.csv(file.choose(), header=TRUE)
mydata
dim(mydata)
summary(mydata)
mean(mydata$correct)
mean(mydata$Correct)
median(mydata$correct)
median(mydata$Correct)
var(mydata$correct)
var(mydata$Correct)
sd(mydata$correct)
sd(mydata$Correct)
min(mydata$correct)
min(mydata$Correct)
max(mydata$correct)
max(mydata$Correct)
summary(mydata)
FreqC <- as.data.frame(table(mydata))
FreqG <-mydata[,4:5]
FreqG
mydata_cc <-mydata[,4:5]
mydata_cc
FreqD <- as.data.frame(table(d))
FreqG <- as.data.frame(table(mydata_cc))
FreqG
FreqD <- transform(FreqD, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqG <- transform(FreqG, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqG
threeYOdata <- mydata[mydata$Age == 3,]
threeYOdata
mydata
threeYOdata
mydata <-read.csv(file.choose(), header=TRUE)
mydata
summary(data)
summary(mydata)
mean(mydata$Correct)
threeYOdata
mydata
threeYO <- mydata[mydata$Age.Years ==3]
threeYO
mean(threeYO$Correct)
median(threeYO)
median(threeYO$Correct)
summary(threeYO)
threeYO <- mydata[mydata$Age.Years ==3,]
threeYO
mydata
mydata <-read.csv(file.choose(), header=TRUE)
mydata
threeYOdata <- mydata[mydata$Age.Years == 3,]
threeYOdata
summary(threeYOdata)
mean(threeYOdata$Correct)
threeYOdata
mean(threeYOdata$Correct)
median(threeYOdata$Correct)
min(threeYOdata$Correct)
max(threeYOdata$Correct)
var(threeYOdata)
var(threeYOdata$Correct)
sd(threeYOdata$Correct)
fourYOdata <- mydata[mydata$Age == 4,]
fourYOdata
mydata
mydata <-read.csv(file.choose(), header=TRUE)
my data
mydata
threeYOdata <- mydata[mydata$Age == 3,]
threeYO <- mydata[mydata$Age == 3,]
threeYO
threeYOdata <- mydata[mydata$Age == 3,]
threee <- mydata[mydata$Age == 3,]
threee
mydata
threeYOdata <-mydata[mydata$Age.Years == 3,]
threeYOdata
fourYOdata <- mydata[mydata$Age.Years == 4,]
fourYOdata
summary(fourYOdata)
mean(fourYOdata$Correct)
median(fourYOdata$Correct)
min(fourYOdata$Correct)
max(fourYOdata)
max(fourYOdata$Correct)
var(fourYOdata$Correct)
sd(fourYOdata$Correct)
summary(fourYOdata)
four_cc <-fourYOdata[, 4:5]
four_cc
FreqR <-as.data.frame(table(four_cc))
FreqR
FreqA <- transform(FreqA, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqR <- transform(FreqA, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqR <- transform(FreqR, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqR
threeYOdata
three_cc <-threeYOdata[, 4:5]
three_cc
FreqA <- as.data.frame(table(a))
FreqP <- as.data.frame(table(three_cc))
FreqP
FreqC <- transform(FreqC, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqP <- transform(FreqP, cumFreq = cumsum(Freq), relative = prop.table(Freq))
FreqP
threeYO_cc
three_cc
se <- function(three_cc$Correct) sqrt(var(three_cc$Correct)/length(three_cc$Correct))
se <- function(three_cc) sqrt(var(three_cc)/length(three_cc))
se
SE <-three_cc[c(three_cc$Correct)]
three_cc
a <-threeYO_cc[threeYO_cc$Condition =="SDOD",]$Correct
a <-three_cc[three_cc$Condition =="SDOD",]$Correct
a
V <- c(2, 2, 2, 4, 2, 1, 2, 3, 3, 1)
v
v
SE <- sd(a)/sqrt(length(a))
SE
a
std <- function(a) sd(a)/sqrt(length(a))
std
std <- function(a)sd(a)/sqrt(length(a))
std
three_cc
a
a <-threeYO_cc[threeYO_cc$Condition =="SDOD",]$Correct
b <-threeYO_cc[threeYO_cc$Condition =="ODSD",]$Correct
b
b <-three_cc[three_cc$Condition =="ODSD",]$Correct
b
a
a <-threeYO_cc[threeYO_cc$Condition =="SDOD",]$Correct
a <-three_cc[three_cc$Condition =="SDOD",]$Correct
a
c <-fourYO_cc[fourYO_cc$Condition =="SDOD",]$Correct
c <-four_cc[four_cc$Condition =="SDOD",]$Correct
c
d <-fourYO_cc[fourYO_cc$Condition =="ODSD",]$Correct
d <-four_cc[four_cc$Condition =="ODSD",]$Correct
d
